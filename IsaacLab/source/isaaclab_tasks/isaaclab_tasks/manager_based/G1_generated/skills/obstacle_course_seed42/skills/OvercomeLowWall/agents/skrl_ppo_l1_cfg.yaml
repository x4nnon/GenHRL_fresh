seed: 42


models:
  separate: True
  policy:  # L1 policy selects discrete L0 skills
    class: CategoricalMixin
    initial_log_std: 0.0
    network:
      - name: net
        input: STATES
        layers: [256, 128]  # Larger network for hierarchical decisions
        activations: elu
    output: ACTIONS
  value:  # L1 value function predicts hierarchical returns (10-100 steps)
    class: DeterministicMixin
    clip_actions: False
    network:
      - name: net
        input: STATES
        layers: [256, 128]
        activations: elu
    output: ONE


memory:
  class: DecisionPointMemory
  memory_size: -1  # automatically determined
  hierarchy_level: 1
  skill_reward_discount: 0.99  # Mild within-skill discount to reduce long-horizon dominance
  debug_mode: true
  gae_lambda: 0.95
  temporal_abstraction_method: "discounted_sum"


agent:
  class: HPPO  # Use hierarchical PPO
  rollouts: 600
  learning_epochs: 16  # Conservative PPO updates to avoid collapse
  mini_batches: 6
  discount_factor: 0.99  # Main discount between L1 decisions
  lambda: 0.95  # GAE lambda for advantage estimation
  skill_reward_discount: 0.99  # Keep some decay across long within-skill horizons
  
  # Learning rates optimized for hierarchical learning
  learning_rate: 1.0e-04  # Lower LR for stability with accumulated rewards
  learning_rate_scheduler: KLAdaptiveLR
  learning_rate_scheduler_kwargs:
    kl_threshold: 0.02  # Tighter KL threshold for stability
    min_lr: 5.0e-05
    max_lr: 3.0e-04
    
  # Clipping parameters adjusted for hierarchical scale
  grad_norm_clip: 0.8  # Slightly lower for stability
  ratio_clip: 0.2
  value_clip: 0.2
  clip_predicted_values: True
  
  # Loss scaling adjusted for hierarchical returns
  entropy_loss_scale: 0.01  # Higher entropy for exploration of skill selection
  value_loss_scale: 0.8  # Higher value loss weight due to importance of hierarchical value estimation
  
  rewards_shaper_scale: 1.0
  time_limit_bootstrap: True  # Important for hierarchical learning
  # Hierarchical specific config
  debug_mode: true

  # logging and checkpoint
  experiment:
    directory: "jump_over_lowwall"
    experiment_name: ""
    write_interval: auto
    checkpoint_interval: auto
    wandb: true
    wandb_kwargs:
      project: "overcomelowwall"
      name: "overcomelowwall"
  sub_policies: ["path_to_sub_policy_1", "path_to_sub_policy_2", "path_to_sub_policy_3"]
  rollouts_per_sub_policy: 50 # corresponds to half a second of rollouts.
    

# Sequential trainer
# https://skrl.readthedocs.io/en/latest/api/trainers/sequential.html
trainer:
  class: SequentialTrainer
  timesteps: 100_000
  environment_info: log